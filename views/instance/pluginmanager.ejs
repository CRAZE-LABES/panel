<%
var name = typeof name !== "undefined" ? name : "Plugin Manager";
var logo = typeof logo !== "undefined" ? logo : true;
%>
<%- include('../components/template', { name: name, logo: logo }) %>
<style>
body {
  background: #232946;
}
.plugin-search-container {
  max-width: 1200px;
  margin: 20px auto;
  background: #432371;
  border-radius: 18px;
  box-shadow: 0 0 12px #864af9, 0 0 2px #232946;
  padding: 32px 16px 32px 16px;
  color: #fff;
}
.plugin-search-bar {
  display: flex;
  gap: 8px;
  width: 100%;
  margin-bottom: 18px;
}
.plugin-search-bar input {
  flex: 1;
  padding: 10px 14px;
  border-radius: 8px;
  border: none;
  background: #232946;
  color: #fff;
  font-size: 1rem;
  outline: none;
  box-shadow: 0 0 6px #864af9 inset;
}
.plugin-search-bar button {
  padding: 10px 18px;
  border-radius: 8px;
  border: none;
  background: #864af9;
  color: #fff;
  font-weight: bold;
  font-size: 1rem;
  transition: background .2s;
  cursor: pointer;
}
.plugin-search-bar button:hover {
  background: #a084ee;
}
.plugins-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 18px;
}
@media (max-width:900px) {
  .plugins-grid { grid-template-columns: repeat(2, 1fr);}
}
@media (max-width:600px) {
  .plugins-grid { grid-template-columns: 1fr;}
}
.plugin-card {
  background: #353570;
  border-radius: 12px;
  padding: 16px 14px;
  box-shadow: 0 0 8px #864af9, 0 0 1px #232946;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  min-height: 140px;
  position: relative;
}
.plugin-title {
  font-weight: bold;
  font-size: 1.12em;
  color: #fff;
}
.plugin-description {
  color: #e0e0f0;
  font-size: .96em;
  margin: 6px 0 10px 0;
  min-height: 36px;
}
.plugin-card-actions {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
}
.plugin-btn {
  border: none;
  border-radius: 6px;
  background: #864af9;
  color: #fff;
  padding: 7px 14px;
  font-weight: bold;
  display: flex;
  align-items: center;
  gap: 4px;
  cursor: pointer;
  transition: background .2s;
}
.plugin-btn:hover { background: #a084ee; }
.plugin-btn[disabled] {
  background: #4a4a6a;
  color: #b3b3d3;
  cursor: not-allowed;
}
.plugin-card-version {
  display: block;
  margin-bottom: 3px;
  font-size: .91em;
  color: #a084ee;
}
.plugin-version-select {
  background: #432371;
  color: #fff;
  border: 2px solid #864af9;
  border-radius: 6px;
  padding: 6px 10px;
  margin-right: 7px;
  margin-left: 7px;
  font-weight: bold;
  min-width: 110px;
}
</style>

<div class="plugin-search-container">
  <form class="plugin-search-bar" id="spigot-search-form" onsubmit="event.preventDefault(); searchSpigot();">
    <input id="spigot-query" type="text" placeholder="Search Spigot plugins..." value=""/>
    <button type="submit">Search</button>
  </form>
  <div id="spigot-results">
    <div style="text-align:center;color:#a084ee;">Type a search and press Enter.</div>
  </div>
</div>

<script>
async function searchSpigot() {
  const query = document.getElementById('spigot-query').value.trim();
  const resultsDiv = document.getElementById('spigot-results');
  resultsDiv.innerHTML = '<div style="text-align:center;color:#a084ee;">Searching...</div>';
  if (!query) return;
  try {
    const res = await fetch('https://api.spiget.org/v2/search/resources/' + encodeURIComponent(query) + '?size=12');
    const plugins = await res.json();
    if (!plugins.length) {
      resultsDiv.innerHTML = '<div style="text-align:center;color:#a084ee;">No results found.</div>';
      return;
    }
    let html = `<div class="plugins-grid">`;
    for (const p of plugins) {
      html += `
      <div class="plugin-card" id="plugin-card-${p.id}">
        <span class="plugin-title">${p.name}</span>
        <span class="plugin-description">${p.tag || p.shortDescription || ""}</span>
        <div class="plugin-card-actions">
          <form method="POST" action="/instance/<%= req.params.id %>/plugins/install" id="install-form-${p.id}" style="display:flex;align-items:center;gap:8px;">
            <select class="plugin-version-select" name="plugin_version" id="version-select-${p.id}">
              <option value="">Loading...</option>
            </select>
            <input type="hidden" name="plugin_id" value="${p.id}">
            <button class="plugin-btn" type="submit">
              <svg xmlns="http://www.w3.org/2000/svg" style="margin-right:2px;" width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5 5m0 0l5-5m-5 5V4"/></svg>
              Download
            </button>
          </form>
          <a class="plugin-btn" href="https://www.spigotmc.org/resources/${p.id}/" target="_blank" rel="noopener" title="Plugin info">
            <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12H9m12 0A9 9 0 11 3 12a9 9 0 0118 0z"/></svg>
            Info
          </a>
        </div>
      </div>`;
    }
    html += '</div>';
    resultsDiv.innerHTML = html;
    // After rendering, fetch versions for each plugin
    for (const p of plugins) {
      loadVersions(p.id);
    }
  } catch (e) {
    resultsDiv.innerHTML = '<div style="color:#f66;text-align:center;">Error loading plugins.</div>';
  }
}

async function loadVersions(pluginId) {
  const select = document.getElementById('version-select-' + pluginId);
  if (!select) return;
  select.innerHTML = `<option value="">Loading...</option>`;
  try {
    const vres = await fetch(`https://api.spiget.org/v2/resources/${pluginId}/versions`);
    const versions = await vres.json();
    if (!versions.length) {
      select.innerHTML = `<option value="">Latest</option>`;
      return;
    }
    select.innerHTML = versions.map(v =>
      `<option value="${v.id}">${v.name}</option>`
    ).join('');
  } catch {
    select.innerHTML = `<option value="">Latest</option>`;
  }
}
</script>
